name: build-and-deploy (backend)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend   # Commands run in backend folder

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Verify lockfile exists
        run: |
          echo "Workspace: $(pwd)"
          ls -la
          test -f package-lock.json && echo "Lockfile found" || (echo "Lockfile missing" && exit 1)

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build --if-present

      - name: Run tests
        run: npm test

      - name: Create .env file from GitHub Secrets
        run: |
          touch .env
          echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PASS=${{ secrets.DB_PASS }}" >> .env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env
          echo "SUPER_ADMIN_NAME=${{ secrets.SUPER_ADMIN_NAME }}" >> .env
          echo "SUPER_ADMIN_EMAIL=${{ secrets.SUPER_ADMIN_EMAIL }}" >> .env
          echo "SUPER_ADMIN_PASSWORD=${{ secrets.SUPER_ADMIN_PASSWORD }}" >> .env
          echo "PORT=${{ secrets.PORT }}" >> .env
          echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env

      - name: Install SSH client
        run: sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
            mkdir -p ~/my-hotel-backend
            cd ~/my-hotel-backend

            git init
            git remote add origin https://github.com/${GITHUB_REPOSITORY}.git || true
            git fetch
            git reset --hard origin/main

            npm install

            cat > .env << EOL
DB_HOST=${{ secrets.DB_HOST }}
DB_USER=${{ secrets.DB_USER }}
DB_PASS=${{ secrets.DB_PASS }}
DB_NAME=${{ secrets.DB_NAME }}
JWT_SECRET=${{ secrets.JWT_SECRET }}
SUPER_ADMIN_NAME=${{ secrets.SUPER_ADMIN_NAME }}
SUPER_ADMIN_EMAIL=${{ secrets.SUPER_ADMIN_EMAIL }}
SUPER_ADMIN_PASSWORD=${{ secrets.SUPER_ADMIN_PASSWORD }}
PORT=${{ secrets.PORT }}
DB_PORT=${{ secrets.DB_PORT }}
EOL

            npm install -g pm2
            pm2 stop my-hotel-backend || true
            pm2 start npm --name "my-hotel-backend" -- start
            pm2 save
          EOF
